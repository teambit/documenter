/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://docs.bit.dev/configuration
 **/{
  "$schema": "",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * name of the workspace.
     **/
    "name": "documenter",
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * set the default scope when there is no matching for the component in the components array.
     **/
    "defaultScope": "teambit.documenter",
    /**
     * set the default directory when there is no matching for the component in the components array.
     **/
    "defaultDirectory": "components"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'npm', 'yarn', 'pnpm'
     * and 'librarian'. our recommendation is use 'librarian' which reduces package duplicates
     * and totally removes the need of a 'node_modules' directory in your project.
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "dependencies": {
        "@mdx-js/react": "1.6.22",
        "@teambit/base-ui.input.error": "^1.0.0",
        "@teambit/base-ui.layout.breakpoints": "^1.0.0",
        "@teambit/base-ui.layout.grid-component": "^1.0.0",
        "@teambit/base-ui.surfaces.split-pane.hover-splitter": "^1.0.0",
        "@teambit/base-ui.surfaces.split-pane.split-pane": "^1.0.0",
        "@teambit/base-ui.text.heading": "^1.0.0",
        "@teambit/base-ui.text.muted-text": "^1.0.0",
        "@teambit/base-ui.text.paragraph": "^1.0.0",
        "@teambit/base-ui.text.themed-text": "^1.0.0",
        "@teambit/base-ui.theme.fonts.roboto": "^1.0.0",
        "@teambit/base-ui.theme.sizes": "^1.0.0",
        "@teambit/base-ui.theme.theme-provider": "^1.0.0",
        "@teambit/design.theme.icons-font": "^1.0.0",
        "@teambit/evangelist.elements.icon": "^1.0.0",
        "@teambit/evangelist.elements.image": "^1.0.0",
        "@teambit/evangelist.surfaces.dropdown": "^1.0.0",
        "@testing-library/react": "12.0.0",
        "@types/mdx-js__react": "1.5.3",
        "@types/react": "16.9.43",
        "@types/react-syntax-highlighter": "13.5.0",
        "classnames": "^2.2.6",
        "copy-to-clipboard": "^3.3.1",
        "markdown-to-jsx": "7.1.3",
        "prism-react-renderer": "^1.1.1",
        "react-live": "^2.2.2",
        "react-markdown": "6.0.2",
        "react-syntax-highlighter": "^13.0.0",
        "react-use-dimensions": "^1.2.1",
        "reset-css": "^5.0.1",
        "use-debounce": "^3.4.3"
      },
      "peerDependencies": {
        "react": "^16.13.1",
        "react-dom": "^16.13.1"
      }
    },
    "packageManagerArgs": [],
    "devFilePatterns": [
      "*.spec.ts"
    ],
    /**
     * If true, then Bit will add the "--strict-peer-dependencies" option when invoking package managers.
     * This causes "bit install" to fail if there are unsatisfied peer dependencies, which is
     * an invalid state that can cause build failures or incompatible dependency versions.
     * (For historical reasons, JavaScript package managers generally do not treat this invalid
     * state as an error.)
     *
     * The default value is false to avoid legacy compatibility issues.
     * It is strongly recommended to set strictPeerDependencies=true.
     */
    "strictPeerDependencies": true,
    "installFromBitDevRegistry": true,
    "savePrefix": "",
    /**
     * map of extra arguments to pass to the configured package manager upon the installation
     * of dependencies.
     */
    "extraArgs": []
  },
  "teambit.react/react": {
    "reactVersion": "^16.0.0"
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your workspace.
   * this is extremely useful for upgrading, aligning and building components with a
   * new set of dependencies.
   **/
  "teambit.workspace/variants": {
    // /**
    //  * wildcards can be used to configure components under a specific namespace.
    //  * this configuration applies the react extensions on all components the `ui` namespace.
    // **/
    "*": {
      "propagate": false,
      "teambit.pkg/pkg": {
        "packageManagerPublishArgs": [
          "--access public"
        ],
        "packageJson": {
          "name": "@teambit/documenter.{name}",
          "private": false
        }
      },
      "teambit.react/react": {}
    }
  }
}